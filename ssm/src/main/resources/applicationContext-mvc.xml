<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
		
		<!-- 开始spring MVC对controller的扫描 -->
		<context:component-scan base-package="cn.itcast.controller"></context:component-scan>
		
		<mvc:annotation-driven>
			<mvc:message-converters>
				<!-- 返回普通字符创的消息转换器 -->
				<ref bean="stringMessageConverter"/>
				<!-- 返回json的消息转换器 -->
				<ref bean="fastJsonHttpMessageConverter"/>
				<!-- 返回xml的消息转换器 -->
				<ref bean="marshallingHttpMessageConverter"/>
			</mvc:message-converters>
		</mvc:annotation-driven>
		
		<!-- 不进行拦截的,避免对静态资源进行拦截了 -->  
	    <mvc:resources location="/" mapping="/**/*.html" order="0" />  
	    <mvc:resources location="/images/" mapping="/images/**" />  
	    <mvc:resources location="/img/" mapping="/img/**" />  
	    <mvc:resources location="/download/" mapping="/download/**" />  
	    <mvc:resources location="/js/" mapping="/js/**" />  
	    <mvc:resources location="/css/" mapping="/css/**" />
	    <mvc:resources location="/assets/" mapping="/assets/**" />  
	    <mvc:resources location="/plugin/" mapping="/plugin/**" />  
	    <mvc:resources location="/WEB-INF/pages/" mapping="/pages/**" /> 
		
		<!-- 避免在返回中文时出现乱码,默认的编码为iso8859-1 -->
		<bean id="stringMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
			<constructor-arg index="0" value="UTF-8" ></constructor-arg>
			<property name="supportedMediaTypes">
				<list>
					<value>text/plain;charset=UTF-8</value>
				</list>
			</property>
		</bean>
		
		<!-- 避免IE上返回json文件时，出现文件下载情况 -->
		<bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
			<property name="supportedMediaTypes">
				<list>
					<value>application/json;charset=UTF-8</value>
					<!-- 该句避免在IE上出现返回json时，是文件下载 -->
					<value>text/plain;charset=UTF-8</value>
				</list>
			</property>
		</bean>
		
		<!-- 避免返回xml时出现文件下载情况 -->
		<bean id="marshallingHttpMessageConverter"  class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">  
        	<property name="marshaller" ref="castorMarshaller" />  
        	<property name="unmarshaller" ref="castorMarshaller" />  
        	<property name="supportedMediaTypes">  
            	<list>  
                	<value>text/xml;charset=UTF-8</value>  
                	<value>application/xml;charset=UTF-8</value>  
            	</list>  
        	</property>  
    	</bean>  
    	
    	<bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller" /> 
    
	    <!-- 定义视图解析器 -->
	    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    	<property name="viewClass" value="org.springframework.web.servlet.view.InternalResourceView"></property>
	    	<property name="prefix" value="/WEB-INF/pages/"></property>
	    	<property name="suffix" value=".jsp"></property>
	    </bean>
	    
	    <!-- 文件上传 -->
	    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    	<!-- 请求的编码格式，默认为iso8859-1 -->
	    	<property name="defaultEncoding" value="UTF-8"></property>
	    	<!-- 上传文件的总最大限制 -->
	    	<property name="maxUploadSize" value="52428800"></property>
	    	<!-- 上传文件的临时路径 -->
	    	<property name="uploadTempDir" value="/upload"></property>
	    </bean>
</beans>